<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
	  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	  http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
	  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<!-- transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- enable component scanning (beware that this does not enable mapper scanning!) -->
	<context:component-scan base-package="com.gmd" />

	<!-- enable autowire -->
	<context:annotation-config />

	<!-- enable transaction demarcation with annotations -->
	<tx:annotation-driven />

	<!-- define the SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.gmd.productividad.domain" />
	</bean>

	<!-- scan for mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.gmd.productividad.dao.mappers" />
	</bean>
	
	<bean id="accessDeniedHandler" 
	class="com.gmd.productividad.web.MyAccessDeniedHandler">
	<property name="accessDeniedUrl" value="403" />
   </bean>

	<beans profile="default">
		<context:property-placeholder location="classpath:application-config.default.properties" />
		<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
			<property name="driverClassName" value="${db.driver}"/>
			<property name="url" value="${db.url}"/>
			<property name="username" value="${db.user}"/>
			<property name="password" value="${db.password}"/>
		</bean>
		<jdbc:initialize-database data-source="dataSource" enabled="${db.initialize}">
			<jdbc:script location="classpath:sql/create-schema.oracle.sql" />
		</jdbc:initialize-database>
	</beans>
   <beans>
        <import resource="spring-context-security-cas.xml"/>
    </beans>
	<!--<beans profile="test">
		<context:property-placeholder location="application-config.test.properties"/>
		&lt;!&ndash; in-memory database and a datasource &ndash;&gt;
		<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
			<property name="driverClassName" value="${db.driver}"/>
			<property name="url" value="${db.url}"/>
			<property name="username" value="${db.user}"/>
			<property name="password" value="${db.password}"/>
		</bean>
		<jdbc:initialize-database data-source="dataSource" enabled="${db.initialize}">
			<jdbc:script location="classpath:sql/create-schema.h2.sql" />
			<jdbc:script location="classpath:sql/load-test-data.sql" />
		</jdbc:initialize-database>
	</beans>-->
</beans>